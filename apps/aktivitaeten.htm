<!DOCTYPE html>
<html lang="de">
<head>
<title> Liste meiner Aktivitäten </title>
<meta charset="utf-8" />
<meta name="robots" content="noindex" />
<link rel="stylesheet" href="../kern/esa.css" />
<script> 
window.onload = function () {
  if (top&&top["bib"]) { top.bib.dl({ doc: document, id: 'DL1', show_idx: [] }); }
};
</script>
</head>
<body>


<h1> Liste meiner Aktivitäten </h1>

<p> 
  Hier habe ich meine Aktivitäten zum ESA - Praktikum 2016 protokolliert
  ( Chronologie, Bemerkungen, todo, usw. ).
  Insbesondere werden weitere Ideen, Lösungserfolge, Schwierigkeiten, todo, offene Fragen, Fertigstellungstermine, usw. protokolliert.
</p>


<dl id="DL1"><dt> Erster Vorlesungstermin 2016-04-21
 <dfn> Besprechung, Projekte, Termine </dfn>
</dt><dd>

<p>
Es wurden Formalien und Hilfsmittel zur Veranstaltung besprochen und im praktischen Teil auf Lösungsmöglichkeiten eingegangen.

Die Online-Unterlagen zu ESA-Veranstaltung sind zu finden unter
<a class="extern" target="_blank" href='http://www.cilie.org/esa/index.htm'>
 ESA-Vorlesung 
</a>.
Die Augabenstellung zum ersten ESA-Projekt ist zu finden unter
<a class="extern" target="_blank" href='http://www.cilie.org/esa/prakt-2016/auf-1-2016.htm'>
 1. ESA-Projekt
</a>  
</p>


</dd><dt> 1. Projekt bis 2016-04-18
<dfn> Homepage einrichten und Ed-App </dfn>
</dt><dd>
<p>
Die erste Aufgabe befasst sich mit String-Funktionen, es sollten verschiedene Funktionen zum manipulieren von Strings ausprobiert und sinnvoll genutzt werden.<br>
Hierfür stand bereits ein Template mit zwei Textareas zur Verfügung, die mit den neuen Funktionen manipuliert werden konnten.

</p>
<p>
Folgende Funktionen wurden neu hinzugefügt:
</p>
<ul class="dir">
	<li>Ein Zeichen-Counter für TA0</li>
	<li>Test einfacher String-Funktionen mit repeat() und trim()</li>
	<li>Ein Template für XLIFF-Sprachdateien zur schnellen Verwendung</li>
	<li>Ein Tabellenkonverter, mit dem sich in "Kurzschreibweise" HTML-Tabellen bauen lassen</li>
	<li>Ein Listenkonverter, der mit regulären Ausdrücken Listen in Texten zu HTML-Listen konvertiert</li>
</ul>

<p><b>Tabellenkonverter</b><br><br>
Mit dem Tabellenkonverter kann man schnell Tabellen zeilenweise und mit einem einfachen Trennzeichen (|) herunterschreiben.<br>
Der Konverter fügt dann alle Tags hinzu. 
Beispiel Eingabe:</p>

<pre>
Tier | Größe
Hund | mittel
Katze | klein
Pferd | groß
</pre>
<p>
Ergibt folgende Ausgabe:
</p>
<pre>
&lt;table&gt;
	&lt;tr&gt;
		&lt;th&gt;Tier&lt;/th&gt;
		&lt;th&gt;Gr&ouml;&szlig;e&lt;/th&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Hund&lt;/td&gt;
		&lt;td&gt;mittel&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Katze&lt;/td&gt;
		&lt;td&gt;klein&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Pferd&lt;/td&gt;
		&lt;td&gt;gro&szlig;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
</pre>

<p><b>Listenkonverter</b><br><br>
Der Listenkonverter ersetzt einfache Listen durch HTML-Listen und nutzt dafür reguläre Ausdrücke.
Beispiel Eingabe:</p>
<pre>
Das ist eine Liste:

- Punkt1
- Punkt2
- Punkt3

Mehr Text
</pre>
<p>Ergibt folgende Ausgabe:</p>
<pre>
Das ist eine Liste:&lt;ul&gt;&lt;li&gt;Punkt1&lt;/li&gt;
&lt;li&gt;Punkt2&lt;/li&gt;
&lt;li&gt;Punkt3&lt;/li&gt;&lt;/ul&gt;Mehr Text

</pre>







</dd><dt> 2. Projekt bis 2016-04-25
<dfn> Posting-App</dfn>
</dt><dd>
<p>Mit der Posting-App können wie auf einer Pinnwand "Posts" erstellt und positioniert werden.</p>
<p>Hierfür steht ein eigenes Control Panel bereit.</p>
<p>Intern werden die Felder per RegEx in ein vorgegebenes Template geparst.</p>
<p>Das Template sieht so aus:</p>
<pre>
&#x3C;article style=&#x22;position: absolute; top: {posY}px; left: {posX}px&#x22;&#x3E;
  &#x3C;header&#x3E;
    &#x3C;address&#x3E;Autor: {author}&#x3C;/address&#x3E;
    &#x3C;h3&#x3E;{title}&#x3C;/h3&#x3E;
  &#x3C;/header&#x3E;
  &#x3C;p&#x3E;{content}&#x3C;/p&#x3E;
&#x3C;/article&#x3E;
</pre>
<p>Marker werden mit {} gekennzeichnet.</p>






</dd><dt> 3. Projekt bis 2016-05-02
<dfn> Punktverbinder</dfn>
</dt><dd>
<p>Der Punktverbinder nimmt eine beliebige Reihe von Punkten aus dem Inputfeld, sortiert sie und zeichnet sie als verbundene Linie auf dem Canvas. Die Farbe ist per HTML5 Color Input wählbar, was das Zeichnen mehrer Graphen in einem Canvas erleichtert.</p>
<p>Dabei findet eine Konversion von echten Koordinaten auf Screen-Koordinaten statt, welche sich dynamisch der Größe des Canvas anpassen kann. Sie sorgt dafür, dass der Canvas immer voll ausgenutzt wird, aber kein Punkt außerhalb liegt.</p>
<p>Die Punkte müssen folgendes Format haben:</p>
<pre>x1:y1, x2:y2, x3:y3, (...)</pre>

<p>Die Reihenfolge der Punkte ist dagegen nicht wichtig, sie werden nach dem X-Parameter sortiert.</p>

<p>Für das Sortieren der Punkt-Arrays habe ich einen Code-Schnipsel von Stackoverflow verwendet: <a href="http://stackoverflow.com/questions/8837454/sort-array-of-objects-by-single-key-with-date-value">http://stackoverflow.com/questions/8837454/sort-array-of-objects-by-single-key-with-date-value</a>. Die Funktion ist per Kommentar gekennzeichnet.

<p>Um die Konversion von echten Daten auf Screen-Koordinaten zu demonstrieren, kann man den Canvas per Button auf verschiedene Größen einstellen. Der Graph wird dann jeweils flächenfüllend gezeichnet.</p>




</dd><dt> 4. Projekt bis 2016-05-09
<dfn> Canvas to SVG</dfn>
</dt><dd>
<p>Die Canvas to SVG App erlaubt das Erstellen von SVG-Polygons auf dem Canvas.</p>
<p>Mit Klick auf "Neues Polygon" kann ein neues Polygon angelegt und per Klick auf den Canvas mit Punkten befüllt werden. Ein Klick auf "Polygon schließen" verbindet den ersten und letzten Punkt und speichert das Object im Zwischenspeicher.</p>
<p>Dann kann per Klick auf "SVG erstellen" das SVG der Grafik erzeugt werden. Sie wird sowohl als Text in einer Textarea als auch im Browser als Bild angezeigt.</p>
<p>Die App bietet im aktuellen Stand zwar nur Polygone an, lässt sich aber leicht zum Zeichnen von anderen Shapes erweitern. Das Prinzip wiederholt sich an vielen Stellen.</p>



</dd><dt> 5. Projekt bis 2016-05-16
<dfn> SVG Editor</dfn>
</dt><dd>
<p> Mit dem SVG Editor lassen sich SVG Grafiken aus beliebigen Objekten erstellen.</p>
<p> Benutzt werden dafür die Drag-Funktionen aus der Vorlesung sowie eigene spawn()-Funktionen, die neue Elemente aus den Input-Feldern erzeugen.</p>
<p> Geplant ist eine Erweiterung, die die SVG-Grafik in ein SVG-Pattern schreibt, sodass man mit dem Editor Pattern für beispielsweise den Homepage-Hintergrund gestalten kann.</p>




</dd><dt> 6. Projekt bis 2016-05-23
<dfn> <span class="rot">DEMNÄCHST</span> </dfn>
</dt><dd>





</dd><dt> 7. Projekt bis 2016-05-30
<dfn> <span class="rot">DEMNÄCHST</span> </dfn>
</dt><dd>





</dd><dt> 8. Projekt bis 2016-06-06 
<dfn> Localstorage-Notizbrett </dfn>
</dt><dd>
<p> Das interaktive Notizbrett dient dazu, in verschiedene Vorlagen persönliche Notizen einzutragen.</p>
<p> Die Notizen können angelegt, editiert und gelöscht werden.</p>
<p>Jede Aktion wird über die Funktionen msg.storeLocal, msg.editMessage und msg.deleteMessage in der LocalStorage synchronisiert und ist somit immer (auch offline) verfügbar. Die Konversion von Objekt zu LS-String erfolgt standardmäßig über die JSON-Funktionen stringify und parse.</p>




</dd><dt> 9. Projekt bis 2016-06-13 
<dfn> tCalc - interaktive, skalierbare Tabelle </dfn>
</dt><dd>
<p>tCalc ist eine Bibliothek zum editieren von Tabellen.</p>
<p>Sie umfasst folgende Funktionen:</p>
<ul>
	<li>Hizufügen von Zeilen und Spalten</li>
	<li>Summenfunktion über Zeilen und Spalten (einfach in die Zelle klicken, es erscheint ein Kontextmenü)</li>
	<li>Speichern und Laden von Tabellen per LocalStorage</li>
</ul>
<p>Beim Speichern und Laden wird die gespeicherte Tabellengröße berücksichtigt und es werden ggf. neue Zeilen/Spalten hinzugefügt.</p>
<p>Das Kontextmenü könnte man mit weiteren Funktionen ergänzen, z.B. MAX(), MIN()...</p>





</dd><dt> 10. Projekt bis 2016-06-20 
<dfn> <span class="rot">DEMNÄCHST</span> </dfn>
</dt><dd>



</dd></dl>

</body></html>
